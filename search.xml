<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>回归初心</title>
    <url>/posts/fb4226a7/</url>
    <content><![CDATA[<meta name="referrer" content="never">
<div class="picwall" style="width:100%; display:flex; max-height:2000; justify-content: space-between">
    <div  style="width:24%"> 
        <img id="pic1" src="https://dev.iw233.cn/api.php?sort=random&t=1"/><img id="pic5" src="https://dev.iw233.cn/api.php?sort=random&t=5"/><img id="pic9" src="https://dev.iw233.cn/api.php?sort=random&t=9"/><img id="pic13" src="https://dev.iw233.cn/api.php?sort=random&t=13"/><img id="pic17" src="https://dev.iw233.cn/api.php?sort=random&t=17"/>
    </div>
    <div style="width:24%"> 
        <img id="pic2" src="https://dev.iw233.cn/api.php?sort=random&t=2"/><img id="pic6" src="https://dev.iw233.cn/api.php?sort=random&t=6"/><img id="pic10" src="https://dev.iw233.cn/api.php?sort=random&t=10"/><img id="pic14" src="https://dev.iw233.cn/api.php?sort=random&t=14"/><img id="pic18" src="https://dev.iw233.cn/api.php?sort=random&t=18"/>
    </div>
    <div style="width:24%"> 
        <img id="pic3" src="https://dev.iw233.cn/api.php?sort=random&t=3"/><img id="pic7" src="https://dev.iw233.cn/api.php?sort=random&t=7"/><img id="pic11" src="https://dev.iw233.cn/api.php?sort=random&t=11"/><img id="pic15" src="https://dev.iw233.cn/api.php?sort=random&t=15"/><img id="pic19" src="https://dev.iw233.cn/api.php?sort=random&t=19"/>
    </div>
    <div style="width:24%"> 
        <img id="pic4"  src="https://dev.iw233.cn/api.php?sort=random&t=4"/><img id="pic8" src="https://dev.iw233.cn/api.php?sort=random&t=8"/><img id="pic12" src="https://dev.iw233.cn/api.php?sort=random&t=12"/><img id="pic16" src="https://dev.iw233.cn/api.php?sort=random&t=16"/><img id="pic20" src="https://dev.iw233.cn/api.php?sort=random&t=20"/>
    </div>
</div>




<style>
.picwall img {
    margin-bottom: 20px;
}
</style>


]]></content>
      <categories>
        <category>好看的</category>
      </categories>
      <tags>
        <tag>好看的</tag>
      </tags>
  </entry>
  <entry>
    <title>一切的一切都要从qq签名不见了说起</title>
    <url>/posts/eb9ebd74/</url>
    <content><![CDATA[<p>为什么会有这个网页的出现</p>
<p>梦回2022.07.13晚9点←→</p>
<p>偶然间发现我的qq签名不见了</p>
<p>也不知道签名掉了多久了</p>
<p>于是乎开始翻好友的qq签名</p>
<p>直到我看到了个签名<code>https://niceb.icu</code> </p>
<p>打开浏览器果不其然</p>
<img no-lazy src="./404.png" width="30%"/>

<p>但也从那时开始有了现在这个网页的计划</p>
<p>搞个破网页几个小时就能上线</p>
<p>那么这篇beginning为什么<code>date: 2022-07-16 23:29:55</code></p>
<p><code>2022.07.14-2022.07.16</code>我干啥了</p>
<p>首先，我肯定没有在摸鱼</p>
<details><summary>纠结了3天取什么域名 </summary>
<code>以下省略3天的极限拉扯</code>
</details>

<p>最终有了现在的<code>cinnabar.icu</code> （虽然写到这里的时候我还没去绑域名）</p>
<details><summary>什么是cinnabar</summary>
<blockquote cid="n122" mdtype="blockquote"><p cid="n132" mdtype="paragraph" contenteditable="true" class="md-end-block md-p"><span md-inline="del" class="md-pair-s"><del><span md-inline="plain" class="md-plain">Cinnabar or cinnabarite, from the Ancient Greek: κιννάβαρι, is the bright scarlet to brick-red form of mercury(II) sulfide. It is the most common source ore for refining elemental mercury, and is the historic source for the brilliant red or scarlet pigment termed vermilion and associated red mercury pigments.</span></del></span></p></blockquote>
看看封面cover<br/>
如果还不知道就去看看<span md-inline="code" spellcheck="false" class="md-pair-s md-expand"><code>宝石之国</code></span><br/>
<blockquote cid="n132" mdtype="blockquote"><p cid="n152" mdtype="paragraph" contenteditable="true" class="md-end-block md-p"><span md-inline="plain" class="md-plain">我一定会找到 </span></p><p cid="n153" mdtype="paragraph" contenteditable="true" class="md-end-block md-p"><span md-inline="plain" class="md-plain">比夜间巡逻更快乐 </span></p><p cid="n154" mdtype="paragraph" contenteditable="true" class="md-end-block md-p"><span md-inline="plain" class="md-plain">只有你才能做的工作 </span></p><p cid="n155" mdtype="paragraph" contenteditable="true" class="md-end-block md-p"><span md-inline="plain" class="md-plain"> </span><span md-inline="tab" class="md-tab"></span><span md-inline="plain" class="md-plain">&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;——磷叶石</span></p></blockquote>
</details>
<details><summary>这个小破站是干什么的 </summary>
<code>// TODO: </code>
<style>
hide {
  background-color: #000000;
  color: #000000;
}
hide:hover {
  background-color: white;
  color: black;
}
</style>
<hide>涩涩才是第一生产力！</hide>
</details>


]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>关于网站的一些优化</title>
    <url>/posts/485af310/</url>
    <content><![CDATA[<p>有空了想起来了就弄一弄</p>
<div style="width:100%; display:flex;">
    <div style="margin-right: 20px">
        &#9745; <a class="toc-link" href="#1">网站主题</a><br>
        &#9745; <a class="toc-link" href="#2">图床</a><br>
        &#9744; <a class="toc-link" href="#3">图片懒加载</a><br>
        &#9744; <a class="toc-link" href="#4">返回顶部按钮</a><br>
        &#9745; <a class="toc-link" href="#5">文章加密</a><br>
        &#9745; <a class="toc-link" href="#6">简化文章链接</a><br>
        &#9744; <a class="toc-link" href="#7">Live2d小人</a><br>
        &#9745; <a class="toc-link" href="#8">代码压缩</a><br>
        &#9745; <a class="toc-link" href="#9">显示文章更新时间</a><br>
        &#9744; <a class="toc-link" href="#10">文章置顶</a><br>
    </div>
    <div>
       &#9744; <a class="toc-link" href="#11">侧边栏小组件</a><br>
       &#9744; <a class="toc-link" href="#12">评论功能</a><br>
       &#9745; <a class="toc-link" href="#13">自定义404页面</a><br>
       &#9745; <a class="toc-link" href="#14">锚点链接偏移</a><br>
       &#9744; <a class="toc-link" href="#15">代码高亮</a><br>
       &#9744; <a class="toc-link" href="#16">自定义标签云</a><br>
    </div>
</div>

<h3 id="1">网站主题</h3>

<p><a href="https://github.com/Fechin/hexo-theme-diaspora">Diaspora</a></p>
<p>修改配置文件 <code>_config.yml</code> 中主题 theme</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">diaspora</span></span><br></pre></td></tr></table></figure>

<h3 id="2">图床</h3>

<style>
hide {
  background-color: #000000;
  color: #000000;
}
hide:hover {
  background-color: white;
  color: black;
}
</style>
<p><a href="https://www.superbed.cn/">聚合图床</a> <hide>免费白嫖还好用</hide></p>
<h3 id="3">图片懒加载</h3>

<p><a href="https://github.com/Troy-Yang/hexo-lazyload-image">hexo-lazyload-image</a></p>
<p>整合进项目了但暂时 <code>enable: false</code></p>
<p>在图片墙（例如<a href="/posts/fb4226a7/" title="回归初心">回归初心</a>）中使用懒加载可能会导致初次 &lt;img&gt; 链接无法获取的问题</p>
<h3 id="4">返回顶部按钮</h3>



<h3 id="5">文章加密</h3>

<p><a href="https://github.com/MikeCoder/hexo-blog-encrypt">hexo-blog-encrypt</a></p>
<p>需要加密的文件在 <code>front matter</code> 中添加 <code>password: xxx</code></p>
<p>配置参数还挺多的，以后碰到问题再说</p>
<h3 id="6">简化文章链接</h3>

<p><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a></p>
<p>修改配置文件<code>_config.yml</code>中<code>permalink</code>字段</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span> </span><br></pre></td></tr></table></figure>

<h3 id="7">Live2d小人</h3>

<p><a href="https://www.jianshu.com/p/a7f4a42e4b49">教程？</a></p>
<p>或许也可以考虑下使用<a href="https://github.com/stevenjoezhang/live2d-widget">live2d-widget</a></p>
<h3 id="8">代码压缩</h3>

<p><del>考虑使用 <a href="https://github.com/rozbo/hexo-neat">hexo-neat</a> 或者 gulp</del></p>
<p>使用 <a href="https://github.com/rozbo/hexo-neat">hexo-neat</a> 进行代码压缩</p>
<p><hide>cnm</hide> <code>特别注意不要使用 npm install hexo-neat --save 这玩意最后一次更新在2年前</code> <hide>cnm</hide></p>
<p>第三方 js 使用第三方 cdn 引入</p>
<h3 id="9">显示文章更新时间</h3>

<p>使用脚本自动更新<code>front matter</code>中的<code>updated</code>字段</p>
<p>不想用<a href="https://moeci.com/posts/2022/01/powershell-hexo-updated/">检查 git log</a>的方法最终使用了<a href="https://www.cnblogs.com/yyyzyyyz/p/15792199.html">读取文件信息</a>的方法</p>
<p>在<code>article.ejs</code>布局文件中添加显示样式</p>
<h3 id="10">文章置顶</h3>




<h3 id="11">侧边栏小组件</h3>

<p><code>主要是想给个地方显示最近更新的文章</code></p>
<h3 id="12">评论功能</h3>

<p>考虑使用 <code>Valine</code> 代替主题自带的 <code>gitalk</code></p>
<p><hide>也可能不</hide></p>
<p>暂时没需求懒得弄</p>
<h3 id="13">自定义404页面</h3>

<p>Hexo 提供了跳过渲染功能</p>
<p><del><a href="https://qianling.pw/custom-web-page/">Hexo 跳过渲染，创建自定义网页</a></del></p>
<p>上面那个因为主题还是插件问题好像不太好使</p>
<p>用<a href="https://blog.csdn.net/cungudafa/article/details/106199111">这个</a></p>
<h3 id="14">锚点链接偏移</h3>

<p>一般写法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">定义锚记：[跳转指定位置](#jumpto)</span><br><span class="line">需要跳转的地方：&lt;xxx id=&quot;jumpto&quot;&gt; 我是目标位置 &lt;/xxx&gt;</span><br></pre></td></tr></table></figure>

<p>但由于 header bar 的存在会造成相关部分的内容的遮盖</p>
<p>因此需要对跳转的位置进行偏移</p>
<p>大致的一个实现方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hash = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">to = $(<span class="built_in">decodeURI</span>(hash))</span><br><span class="line">$(<span class="string">&quot;html,body&quot;</span>).<span class="title function_">animate</span>(&#123;</span><br><span class="line">	<span class="attr">scrollTop</span>: to.<span class="title function_">offset</span>().<span class="property">top</span> - <span class="number">50</span></span><br><span class="line">&#125;, <span class="number">300</span>);</span><br></pre></td></tr></table></figure>

<p>这里由于主题中 TOC 的存在直接进行一个懒的偷</p>
<p><code>case (tag.indexOf(&#39;toc-text&#39;) != -1 || tag.indexOf(&#39;toc-link&#39;) != -1 || tag.indexOf(&#39;toc-number&#39;) != -1):</code></p>
<p>在 &lt;a&gt; 中添加 <code>class=&quot;toc-text/toc-link/toc-number&quot;</code> 即可解决问题</p>
<h3 id="15">代码高亮</h3>

<p><a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a></p>
<p>懒 下次弄 <hide><del>草 忘记 markdown 自带的 highlight 要输入语言才会高亮</del></hide></p>
<h3 id="16">自定义标签云</h3>

<p>有两种</p>
<ul>
<li><p><a href="https://github.com/D0n9X1n/hexo-tag-cloud">hexo-tag-cloud</a> 挺好看的 <hide>华而不实</hide></p>
</li>
<li><p><a href="https://cungudafa.blog.csdn.net/article/details/104616500">自定义标签云</a> 这种可以放在文章末尾</p>
</li>
</ul>
]]></content>
      <categories>
        <category>大饼</category>
      </categories>
      <tags>
        <tag>连载中</tag>
      </tags>
  </entry>
  <entry>
    <title>开发日志1</title>
    <url>/posts/a9632716/</url>
    <content><![CDATA[<p>前天开始决定偷跑一下钓鱼游戏</p>
<p>躺床上花了点时间起草了一份设计书  <hide>然后睡着了</hide></p>
<p>一觉起来 太棒了 <hide>写的是个邒</hide></p>
<p>修修补补 =&gt; 2022‎年‎7‎月‎31‎日 ‏‎11:43:44 新建<code>Bullet_Fishing</code>文件夹</p>
<p>把设计书.md放入其中</p>
<p>又是修修补补</p>
<p>然后顺便画了张布局图</p>
<p>想了下还是用 unity + mysql 来实现吧</p>
<p>更新了个 unity =&gt; ‎2022‎年‎7‎月‎31‎日 ‏‎22:09:59 新建<code>Bullet_Fishing\bullet-fishing</code>的 unity 工程文件夹</p>
<p><hide>我他妈为什么当时更新 unity 时候不顺带下个 vs</hide></p>
<h3 id="当-vscode-遇到-unity"><a href="#当-vscode-遇到-unity" class="headerlink" title="当 vscode 遇到 unity"></a>当 vscode 遇到 unity</h3><ol>
<li>在 unity 中，配置 Edit&gt;Preferences&gt;External Tools&gt;External Script Editor 选择 Visual Studio Code</li>
<li>在 vscode 中安装 C# 以及 unity 相关插件</li>
</ol>
<p>然后就<hide>应该</hide>可以使用了</p>
<p>但核心插件 C# 在启动时会报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The .NET Core SDK cannot be located. .NET Core debugging will not be enabled. Make sure the .NET Core SDK is installed and is on the path. </span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<ol>
<li>下载 <a href="https://dotnet.microsoft.com/zh-cn/download/dotnet/sdk-for-vs-code">.Net SDK</a> 并安装 注意环境变量是否配置（如果报错可能需要重启）</li>
<li>根据 <code>Assembly-CSharp.csproj</code> 文件中的 <code>TargetFrameworkVersion</code> 下载对应版本 (v4.7.1) <a href="https://dotnet.microsoft.com/en-us/download/dotnet-framework/net471">.NET Framework</a></li>
<li>重启 vscode</li>
</ol>
<hr>
<h3 id="unity-项目框架"><a href="#unity-项目框架" class="headerlink" title="unity 项目框架"></a>unity 项目框架</h3><p>工欲善其事必先利其器</p>
<p>自己以前弄的找不到了</p>
<p><a href="https://blog.csdn.net/TongOuO/article/details/122764529">框架</a> 这次就用这个修修补补</p>
<p>以后考虑使用整合框架，如 <a href="https://github.com/ALEXTANGXIAO/TEngine">TEngine</a> </p>
<hr>
<p>然后就是数据库的设计</p>
<p>本来想玩一玩关系图然后去下了个<code>一款简单好用的数据库建模平台</code> <a href="https://gitee.com/link?target=https://my.oschina.net/skymozn">Pdmaner</a></p>
<p>感觉也没有多好用.jpg</p>
<p>接着滚回去用我的 navi猫</p>
<p>简简单单写了16个表后我也不想画关系图了</p>
<p>和设计书一样其中 50+% 的内容是不会在 v0.1 中出现的</p>
<p>开摆！</p>
<h3 id="日-我设计了个锤子的表"><a href="#日-我设计了个锤子的表" class="headerlink" title="日 我设计了个锤子的表"></a>日 我设计了个锤子的表</h3><p>有张表叫 <code>player_item</code> </p>
<p>是用来记录玩家获得物品的表</p>
<p>有 <code>num</code> 、 <code>created_time</code> 和 <code>obtain_method</code> 三个字段</p>
<p>为了偷懒每个人的每件物品只会有一条数据</p>
<p><code>UNIQUE INDEX `idx_uid_item_id`(`uid`, `item_id`) USING BTREE</code> </p>
<p>然后每次使用或者获得进行更新</p>
<p>那问题来了：</p>
<p><hide>每次更新都在一条数据上操作<br>那这后面 <code>created_time</code> 和 <code>obtain_method</code>两个字段还有个锤子用<br>总不能每次增加/减少记录一条并且 <code>count</code> 允许负数、 <code>obtain_method</code> 增加使用属性吧<br>然后每次查询语句长的一批</hide></p>
<hr>
<h3 id="Mysql-Data-dll-版本问题"><a href="#Mysql-Data-dll-版本问题" class="headerlink" title="Mysql.Data.dll 版本问题"></a>Mysql.Data.dll 版本问题</h3><p>一般unity项目中的 <code>Scripting Runtime Version</code> 设置的是3.5</p>
<p>所以 mysql.data.dll 要选择 .net3.5 版本的</p>
<p>4.0版本的会报错</p>
<hr>
<p><a href="https://gameconductor.net/blog/unity-test-framework-tutorial.html">unity 单元测试教程</a></p>
<h4 id="在这里"><a href="#在这里" class="headerlink" title="在这里"></a>在这里</h4><h3 id="我宣布"><a href="#我宣布" class="headerlink" title="我宣布"></a>我宣布</h3><h2 id="最强插件"><a href="#最强插件" class="headerlink" title="最强插件"></a>最强插件</h2><h1 id="Github-Copilot"><a href="#Github-Copilot" class="headerlink" title="Github Copilot"></a>Github Copilot</h1><hr>
<h3 id="反射-SetValue-碰到-DBNull-时无法转换成-String"><a href="#反射-SetValue-碰到-DBNull-时无法转换成-String" class="headerlink" title="反射 SetValue 碰到 DBNull 时无法转换成 String"></a>反射 SetValue 碰到 DBNull 时无法转换成 String</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">System.ArgumentException : Object of type &#x27;System.DBNull&#x27; cannot be converted to type &#x27;System.String&#x27;.</span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// propertyInfo.SetValue(t, row[columnName], null);</span></span><br><span class="line">propertyInfo.SetValue(t, row[columnName] == DBNull.Value ? <span class="built_in">string</span>.Empty : row[columnName], <span class="literal">null</span>);</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="C-中的三目运算符"><a href="#C-中的三目运算符" class="headerlink" title="C# 中的三目运算符"></a>C# 中的三目运算符</h3><p>理想中的使用方法：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">occurTime &gt; fish.DisappearTime ? Destroy(gameObject) : SetInitInfo();</span><br></pre></td></tr></table></figure>

<p>这在 C / C++ 中显然能运行的语句在 C# 中</p>
<p><code>Error: 只有 assignment、call、increment、decrement 和 new 对象表达式可用作语句 </code></p>
<p>简而言之就是必须返回点什么东西…</p>
<p>要在三目运算符中调用 <code>void</code> 方法可以使用委托</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">(condtion ? (System.Action)A : B)();</span><br></pre></td></tr></table></figure>

<p>这还不算完，如果调用的函数带有参数，那又得更麻烦，可以使用 Lambda 表达式：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">(occurTime &gt; fish.DisappearTime ? <span class="keyword">new</span> System.Action(() =&gt; Destroy(gameObject)) : () =&gt; SetInitInfo())();</span><br></pre></td></tr></table></figure>

<p><hide>？？？我用 if/else 不香嘛</hide></p>
<hr>
<p>不知不觉已经 8 月 6 号了，git push 完来随便写一点</p>
<p>弄了个测试池子，画了点测试用鱼，写了点逻辑</p>
<p>先来个鱼的全家福</p>
<img src="./test-fish.png" width="50%"/>

<p>为了方便鱼的运动方向是平行于 x 轴的</p>
<p>选择一条鱼 -&gt; 生成一条鱼 -&gt; 让鱼游起来 -&gt; 设定初始点 -&gt; 让鱼会转向 -&gt; 生成一池鱼 -&gt; 避免鱼重叠</p>
<p>如何避免重叠 =&gt; 使用碰撞盒来检测是否相遇</p>
<p>像 <code>OnTriggerEnter</code> 这一类在碰撞的时候是会同时发送给两方</p>
<p>所以每条鱼只要处理自己的逻辑即可</p>
<img src="./onTriggerEnter.png"/>

<p>然后加上鱼王的话，为了提现鱼王的地位，最后弄成了这个逻辑</p>
<img src="./onTriggerEnter2.png"/>

<p><hide>看这个流程图能看明白就见鬼了 流程图真的不适合用来描述复杂判断语句</hide></p>
<p>简单来说就是 <code>大鱼吃小鱼，鱼王最威武</code></p>
<p>有了鱼碰撞盒那我又为了偷懒给池子搞了个大的碰撞盒</p>
<p>当鱼离开池子的 box 触发 <code>OnTriggerExit</code> 的时候调用 <code>SetInitInfo</code> 重新随机鱼的位置</p>
<p>偶然间发现 <code>SetInitInfo</code> 会有额外的触发</p>
<p>也就是说</p>
<h4 id="如果对象在处于有触发碰撞的情况下被-Destroy，会触发-OnTriggerExit"><a href="#如果对象在处于有触发碰撞的情况下被-Destroy，会触发-OnTriggerExit" class="headerlink" title="如果对象在处于有触发碰撞的情况下被 Destroy，会触发 OnTriggerExit"></a>如果对象在处于有触发碰撞的情况下被 Destroy，会触发 OnTriggerExit</h4><p>虽然修了这个问题但写到这里还是觉得身上有七七四十九只蚂蚁在爬</p>
<p>尤其是还弄了个 onDestroy 的变量</p>
<p>重构代码去了…</p>
<p><code>15 minutes later...</code></p>
<p>改完舒服了，顺便还重构了点别的，看上去没什么问题</p>
<hr>
<p>说到随机初始位置这儿那有小故事讲了</p>
<h3 id="小心使用-While-true"><a href="#小心使用-While-true" class="headerlink" title="小心使用 While (true)"></a>小心使用 While (true)</h3><p>想法是这样的，如果随机的新位置和现有的鱼会重叠，那么重新随机，直至找到一个新的可以放下的位置</p>
<p>怎么想都很简单</p>
<p>第一版</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Vector3 initPosition = <span class="keyword">new</span> Vector3();</span><br><span class="line"><span class="built_in">float</span> faceTo = Random.<span class="keyword">value</span> &lt; <span class="number">0.5f</span> ? <span class="number">-1f</span> : <span class="number">1f</span>;</span><br><span class="line">initPosition.x = ...</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="built_in">bool</span> isOverlap = <span class="literal">false</span>;</span><br><span class="line">    initPosition.y = ...</span><br><span class="line">    <span class="keyword">foreach</span> (FishInstance fishInstance <span class="keyword">in</span> fishList) &#123;</span><br><span class="line">        <span class="keyword">if</span> (boxCollider.IsTouching(fishInstance.boxCollider)) &#123;</span><br><span class="line">            isOverlap = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!isOverlap) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：Unity Editor 未响应</p>
<p>死因：fishList 里有当前的鱼，自己盒子碰自己不是必定 overlap 然后死循环？</p>
<p>第二版</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// if (boxCollider.IsTouching(fishInstance.boxCollider))</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> != fishInstance &amp;&amp; boxCollider.IsTouching(fishInstance.boxCollider))</span><br></pre></td></tr></table></figure>

<p>结果：Unity Editor 未响应</p>
<p>死因：终于发现随机出来的新位置根本没有用上，还是在用原来的碰撞盒进行检测</p>
<p>举个例子</p>
<p>在池子外左侧的小鱼 A 向右运动，碰到了在向左运动的小鱼 B</p>
<p>小鱼 A 的速度比小鱼 B 快，所以小鱼 A 转头调用函数 TurnAround</p>
<p>在 TurnAround 最后会检测如果在池子外且远离池子那么就重新随机初始位置</p>
<p>所以小鱼 A 就需要重新随机初始位置，此时小鱼 A 和 小鱼 B 的碰撞盒是 Touching 的</p>
<p>寄</p>
<p>第三版</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">Bounds newBounds = <span class="keyword">new</span> Bounds(initPosition, boxCollider.bounds.size);</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    ...</span><br><span class="line">    newBounds.center = initPosition;</span><br><span class="line">    <span class="keyword">if</span> (newBounds.Intersects(fishInstance.boxCollider.bounds))</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：Unity Editor 未响应</p>
<p>死因：自己把自己卡死了…</p>
<p>因为测试时候大鱼的尺寸相对于池子来说还是挺大的，大鱼在靠近池子中间的位置离开然后触发重新随机位置</p>
<p>由于在第一版中将 faceTo 的随机扔在了 while 外面，所以如果运气不好随机到了和当前位置同一边</p>
<p>那无论在哪个高度放置都会和先前的位置发生碰撞</p>
<p>但这个时候我还没有意识到 faceTo 的问题</p>
<p>第四版</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// if (newBounds.Intersects(fishInstance.boxCollider.bounds))</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> != fishInstance &amp;&amp; newBounds.Intersects(fishInstance.boxCollider.bounds))</span><br></pre></td></tr></table></figure>

<p>结果：Unity Editor 未响应</p>
<p>死因：被别的大鱼卡死了</p>
<p>最终版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while (true) &#123;</span><br><span class="line">	...</span><br><span class="line">	float faceTo = ...</span><br><span class="line">    initPosition.x = ...</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：Unity Editor 存活</p>
<p>真要说如果两边各一条大鱼当道，还是能卡死你</p>
<p>但是</p>
<p>这种情况并不会发生！答案在下面</p>
<p>所以说小心使用 While (true) 以及软件测试员真的很重要</p>
<hr>
<p>然后说说 Unity 未响应这件事</p>
<img src="./unity-crash.png" width="30%"/>

<p>图文没有关系<br>图文没有关系<br>图文没有关系</p>
<p>重要的事情说三遍！</p>
<p><hide>图片里的叫 Unity Crash</hide></p>
<p>歪个楼：<a href="https://niceb.icu/2022/08/05/%E8%BF%91%E6%9C%9F%E6%9C%89%E7%BD%91%E5%8F%8B%E8%AF%A2%E9%97%AEunity%E6%AD%BB%E5%BE%AA%E7%8E%AF%E7%9A%84%E9%97%AE%E9%A2%98/">近期有网友询问unity死循环的问题</a></p>
<p>接着说鱼的事</p>
<p>现在要在每条鱼上方绑一个可以实时更新的信息牌</p>
<p>信息牌是需要挂在 UI 的 canvas 层下的</p>
<p>位置需要从世界坐标系中转换到屏幕坐标系中</p>
<p>好久没用 Unity 发现以前的 Text 组件已经被放到 Legacy 类下了</p>
<p>取而代之的是 <code>TMP</code>，还没怎么仔细看</p>
<p>UI 的获取和更新在 BasePanel 基类的帮助下还是挺简单的</p>
<p>但一想到后面要给 UI 加动画就脑壳疼</p>
<p>盯着池子观察了会儿发现一个问题</p>
<p>基于上面的 <code>大鱼吃小鱼</code> 的碰撞处理逻辑</p>
<p>若干时间后池子里会变成大鱼的天堂</p>
<p><code>弱肉强食，适者生存</code></p>
<p>要解决也很简单，限制池子里的大鱼最多只有一条</p>
<p>至于鱼王部分</p>
<p>这是<del>今天</del>昨天最后写的一块内容</p>
<p>放到下一个开发日志中讲吧</p>
<p>东西应该还挺多的</p>
<p>然后讲讲池子</p>
<p>最重要的就是刷新机制，总不可能一直在一个地方钓鱼</p>
<p><code>这里的鱼现在警惕性很高 看来还是换个地点比较好</code></p>
<p>为了防止随机到当前池子</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> offset = Random.Range(<span class="number">1</span>, pools.Count);</span><br><span class="line">currentPoolIndex = (currentPoolIndex + offset) % pools.Count;</span><br></pre></td></tr></table></figure>

<p>那为什么我每次随到同一个池子？<hide>因为我只有一个池子</hide></p>
<p>有了池子的随机切换，那就需要一个面板来进行提示</p>
<p>在初步的 Layout 中池子的信息在右上角</p>
<p>除了会显示当前池子、下一个池子、切换倒计时之外</p>
<p>还会显示鱼王的相关信息以及玩家钓鱼的信息</p>
<p>现在大概弄了一小半吧</p>
<p>现在是北京时间 ‎2022‎年‎8月‎7‎日 ‏‎00:22:15</p>
<p><hide>我他妈 Lycoris Recoil 更新了</hide></p>
<p><hide>还写个鸡儿</hide></p>
]]></content>
      <categories>
        <category>开发日志</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>开发日志2</title>
    <url>/posts/306a76ac/</url>
    <content><![CDATA[<p>先新建放着</p>
<p>我主要想看看开发日志1的封面</p>
]]></content>
      <categories>
        <category>开发日志</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>忍者相关攻略</title>
    <url>/posts/2e3e6e01/</url>
    <content><![CDATA[<p>直接开偷.</p>
<h4 id="攻略"><a href="#攻略" class="headerlink" title="攻略"></a>攻略</h4><p><a href="https://ngabbs.com/read.php?tid=31436041">6.X忍者PVE指南</a></p>
<p><a href="https://ngabbs.com/read.php?tid=32473473">下忍视角的绝龙诗开荒攻略选择及各阶段tips</a></p>
<h4 id="忍者BIS"><a href="#忍者BIS" class="headerlink" title="忍者BIS"></a>忍者BIS</h4><p><img src="https://pic.imgdb.cn/item/62d55d74f54cd3f9375db424.png" alt="600忍者bis"></p>
<p><a href="https://ngabbs.com/read.php?tid=30130621">[6.05]全职业开荒+全职业毕业配装合集(完结)</a></p>
]]></content>
      <categories>
        <category>FF14</category>
      </categories>
      <tags>
        <tag>FF14</tag>
      </tags>
  </entry>
  <entry>
    <title>Pies In The Sky</title>
    <url>/posts/b1dacaa5/</url>
    <content><![CDATA[<p>[4/9] 叠过9个就开始画</p>
<p><code>大概吧</code></p>
<hr>
<h4 id="画中画中画中画★★★☆☆"><a href="#画中画中画中画★★★☆☆" class="headerlink" title="画中画中画中画★★★☆☆"></a>画中画中画中画★★★☆☆</h4><p><a href="https://twitter.com/TheFigen/status/1551661875104022528">传送门</a></p>
<h4 id="墨水屏桌面摆件★★☆☆☆"><a href="#墨水屏桌面摆件★★☆☆☆" class="headerlink" title="墨水屏桌面摆件★★☆☆☆"></a>墨水屏桌面摆件★★☆☆☆</h4><p><a href="https://www.bilibili.com/video/BV1zd4y1S71s">传送门</a></p>
<h4 id="带副屏的模块化键盘★★★★★"><a href="#带副屏的模块化键盘★★★★★" class="headerlink" title="带副屏的模块化键盘★★★★★"></a>带副屏的模块化键盘★★★★★</h4><p><a href="https://www.bilibili.com/video/BV19V4y1J7Hx">传送门</a></p>
<h4 id="（钓鱼）弹幕游戏★★★☆☆"><a href="#（钓鱼）弹幕游戏★★★☆☆" class="headerlink" title="（钓鱼）弹幕游戏★★★☆☆"></a>（钓鱼）弹幕游戏★★★☆☆</h4><hr>
<p><code>A pie a day keeps doctor away.</code></p>
]]></content>
      <categories>
        <category>大饼</category>
      </categories>
      <tags>
        <tag>连载中</tag>
      </tags>
  </entry>
  <entry>
    <title>秦风村连载故事会</title>
    <url>/posts/78b5d78/</url>
    <content><![CDATA[<p>nga，分享你刚编好的故事</p>
<hr>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32677496">妹妹高考只考了200多分</a></p>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32824502">打了三个月游戏，才发现她有男朋友</a></p>
<p>[连载中] <a href="https://ngabbs.com/thread.php?authorid=64074814">卑微舔狗日记</a></p>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32726385">关于我上班摸鱼记录下属美工的摸鱼日常的这件事</a></p>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32763124">那一年苦逼的春节加班，丫头回来了</a></p>
<p>[已烂尾] <a href="https://ngabbs.com/read.php?tid=32665855">拼桌拼出来的情缘</a></p>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32481201">和你做搭档的时候，我不用排奶轴</a></p>
]]></content>
      <categories>
        <category>树洞</category>
      </categories>
      <tags>
        <tag>连载中</tag>
      </tags>
  </entry>
</search>

<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Taiji White结局——环境谜题</title>
    <url>/posts/29257456/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer">
Taiji 一眼鉴定 2d 版 Witness

<p>那肯定少不了最有意思的环境谜题</p>
<p><code>本文只提供环境谜题的谜面 解题过程请自行完成</code></p>
<p>首先是入口</p>
<p>回到快乐老家</p>
<p>环境题的答题板就在出生点的正下方</p>
<details><summary>进入方法</summary>
    <img src="https://article.biliimg.com/bfs/article/14362b3e560a41667cf3f139f35c1e162b9220ef.png"/>
</details>

<h3 id="九个环境谜题"><a href="#九个环境谜题" class="headerlink" title="九个环境谜题"></a>九个环境谜题</h3><ul>
<li><p>Mine</p>
<div style="width:100%; display:flex; justify-content: space-between">
    <div style="width: 48%">
        <details><summary>面板</summary>
        <img src="https://article.biliimg.com/bfs/article/d025e3228f711b7a50296a61fd8b4bb3b76684cb.png"/>
        </details>
    </div>
    <div style="width: 48%">
        <details><summary>答案</summary>
        <img src="https://article.biliimg.com/bfs/article/19dd5331657e14d07b6b5746957588f69468d354.png"/>
        </details>
    </div>
</div>

<details><summary>思路</summary>
<img src="https://article.biliimg.com/bfs/article/04350323860cb6644a50396081d1b6f57c281100.png"/>
</details></li>
<li><p>Graveyard</p>
<div style="width:100%; display:flex; justify-content: space-between">
    <div style="width: 48%">
        <details><summary>面板</summary>
        <img src="https://article.biliimg.com/bfs/article/822ab784e58b7ce7c262188ea925540fd4af7da0.png"/>
        </details>
    </div>
    <div style="width: 48%">
        <details><summary>答案</summary>
        <img src="https://article.biliimg.com/bfs/article/9fe72759d6f20aaaa0a5d30edb65e99cbeeacd34.png"/>
        </details>
    </div>
</div>

<details><summary>思路</summary>
<img src="https://article.biliimg.com/bfs/article/e0056ae91775eeb4bae0576503d7ffa4c97b6cda.png"/>
</details></li>
<li><p>Orchard</p>
<div style="width:100%; display:flex; justify-content: space-between">
    <div style="width: 48%">
        <details><summary>面板</summary>
        <img src="https://article.biliimg.com/bfs/article/f59383489a935e8e1c089238e14f0e08bd0cdda3.png"/>
        </details>
    </div>
    <div style="width: 48%">
        <details><summary>答案</summary>
        <img src="https://article.biliimg.com/bfs/article/1caaa099599c68654d3ee7392e92bee869787455.png"/>
        </details>
    </div>
</div>

<details><summary>思路</summary>
<img src="https://article.biliimg.com/bfs/article/5038de509d70794a27fca92da206bf11c7336d15.png"/>
</details></li>
<li><p>Ruins</p>
<div style="width:100%; display:flex; justify-content: space-between">
    <div style="width: 48%">
        <details><summary>面板</summary>
        <img src="https://article.biliimg.com/bfs/article/82053c08ceaf9d32b84ee9895bd7baf3e56f58fa.png"/>
        </details>
    </div>
    <div style="width: 48%">
        <details><summary>答案</summary>
        <img src="https://article.biliimg.com/bfs/article/b882a138931d8add09c4ee2cc0aee09c76818eca.png"/>
        </details>
    </div>
</div>

<details><summary>思路</summary>
<img src="https://article.biliimg.com/bfs/article/0b04e522a13b21701cef088ecc67656c189c833c.png"/>
</details></li>
<li><p>Shrine</p>
<div style="width:100%; display:flex; justify-content: space-between">
    <div style="width: 48%">
        <details><summary>面板</summary>
        <img src="https://article.biliimg.com/bfs/article/d6c148266c982f21f1b249b65147a16efab201cb.png"/>
        </details>
    </div>
    <div style="width: 48%">
        <details><summary>答案</summary>
        <img src="https://article.biliimg.com/bfs/article/1ec9f95432a377a4fda9fe4680568d100d84d708.png"/>
        </details>
    </div>
</div>

<details><summary>思路</summary>
<img src="https://article.biliimg.com/bfs/article/dfb4d778cffdd022d166584ba24859dbcfab1eac.png"/>
</details></li>
<li><p>Gardens</p>
<div style="width:100%; display:flex; justify-content: space-between">
    <div style="width: 48%">
        <details><summary>面板</summary>
        <img src="https://article.biliimg.com/bfs/article/410e18206009870545bcca79b4fbd635372ae6ab.png"/>
        </details>
    </div>
    <div style="width: 48%">
        <details><summary>答案</summary>
        <img src="https://article.biliimg.com/bfs/article/4ca084e5f0d241951fac76e27cb3c36a80ba1a49.png"/>
        </details>
    </div>
</div>

<details><summary>思路</summary>
<img src="https://article.biliimg.com/bfs/article/edac2bfc856b7ce4d2f46ae63e61d2e2967a51ce.png"/>
</details></li>
<li><p>Gallery</p>
<div style="width:100%; display:flex; justify-content: space-between">
    <div style="width: 48%">
        <details><summary>面板</summary>
        <img src="https://article.biliimg.com/bfs/article/6900f031b8db7e13a4b45205afc520309689beee.png"/>
        </details>
    </div>
    <div style="width: 48%">
        <details><summary>答案</summary>
        <img src="https://article.biliimg.com/bfs/article/09d1cf4ecaa57544af8ad74f0af543316338b711.png"/>
        </details>
    </div>
</div>

<details><summary>思路</summary>
<img src="https://article.biliimg.com/bfs/article/5f5cba958f9be0b439a0d89450f66afc2d83e7a9.png"/>
</details></li>
<li><p>Plateaus</p>
<div style="width:100%; display:flex; justify-content: space-between">
    <div style="width: 48%">
        <details><summary>面板</summary>
        <img src="https://article.biliimg.com/bfs/article/e3fa2b43cb6cdee5fbac300d446f56c2d2f73e97.png"/>
        </details>
    </div>
    <div style="width: 48%">
        <details><summary>答案</summary>
        <img src="https://article.biliimg.com/bfs/article/3305de8309a2f99915c64cec08f6d064ca0790f1.png"/>
        </details>
    </div>
</div>

<details><summary>思路</summary>
<img src="https://article.biliimg.com/bfs/article/8e397cf338b9a096e8efcea331e805a4d466d4fe.png"/>
</details></li>
<li><p>Mill</p>
<div style="width:100%; display:flex; justify-content: space-between">
    <div style="width: 48%">
        <details><summary>面板</summary>
        <img src="https://article.biliimg.com/bfs/article/a865ec5c19486eea037abd764b3d47d5b5a06251.png"/>
        </details>
    </div>
    <div style="width: 48%">
        <details><summary>答案</summary>
        <img src="https://article.biliimg.com/bfs/article/56ab1c89e7330a670149884a874518bbe148eeb5.png"/>
        </details>
    </div>
</div>

<details><summary>思路</summary>
<img src="https://article.biliimg.com/bfs/article/fa197d8e417d05f7d3734ab888fb8b3bc4c47c11.png"/>
</details></li>
</ul>
<h3 id="Ending"><a href="#Ending" class="headerlink" title="Ending"></a>Ending</h3><details><summary>Black</summary>
    <img src="https://article.biliimg.com/bfs/article/31cc1a6d4468ce2f63ba5a822d95186c96af3553.png"/>
</details>
<details><summary>White</summary>
    <img src="https://article.biliimg.com/bfs/article/ac426b4a01ae7ec74a59cf4f2a0e3578b64b1251.png"/>
</details>
]]></content>
      <categories>
        <category>攻略</category>
      </categories>
      <tags>
        <tag>谜题</tag>
      </tags>
  </entry>
  <entry>
    <title>回归初心</title>
    <url>/posts/fb4226a7/</url>
    <content><![CDATA[<meta name="referrer" content="never">
<div class="picwall" style="width:100%; display:flex; max-height:2000; justify-content: space-between">
    <div  style="width:24%"> 
        <img id="pic1" src="https://dev.iw233.cn/api.php?sort=random&t=1"/><img id="pic5" src="https://dev.iw233.cn/api.php?sort=random&t=5"/><img id="pic9" src="https://dev.iw233.cn/api.php?sort=random&t=9"/><img id="pic13" src="https://dev.iw233.cn/api.php?sort=random&t=13"/><img id="pic17" src="https://dev.iw233.cn/api.php?sort=random&t=17"/>
    </div>
    <div style="width:24%"> 
        <img id="pic2" src="https://dev.iw233.cn/api.php?sort=random&t=2"/><img id="pic6" src="https://dev.iw233.cn/api.php?sort=random&t=6"/><img id="pic10" src="https://dev.iw233.cn/api.php?sort=random&t=10"/><img id="pic14" src="https://dev.iw233.cn/api.php?sort=random&t=14"/><img id="pic18" src="https://dev.iw233.cn/api.php?sort=random&t=18"/>
    </div>
    <div style="width:24%"> 
        <img id="pic3" src="https://dev.iw233.cn/api.php?sort=random&t=3"/><img id="pic7" src="https://dev.iw233.cn/api.php?sort=random&t=7"/><img id="pic11" src="https://dev.iw233.cn/api.php?sort=random&t=11"/><img id="pic15" src="https://dev.iw233.cn/api.php?sort=random&t=15"/><img id="pic19" src="https://dev.iw233.cn/api.php?sort=random&t=19"/>
    </div>
    <div style="width:24%"> 
        <img id="pic4"  src="https://dev.iw233.cn/api.php?sort=random&t=4"/><img id="pic8" src="https://dev.iw233.cn/api.php?sort=random&t=8"/><img id="pic12" src="https://dev.iw233.cn/api.php?sort=random&t=12"/><img id="pic16" src="https://dev.iw233.cn/api.php?sort=random&t=16"/><img id="pic20" src="https://dev.iw233.cn/api.php?sort=random&t=20"/>
    </div>
</div>




<style>
.picwall img {
    margin-bottom: 20px;
}
</style>


]]></content>
      <categories>
        <category>好看的</category>
      </categories>
      <tags>
        <tag>好看的</tag>
      </tags>
  </entry>
  <entry>
    <title>一切的一切都要从qq签名不见了说起</title>
    <url>/posts/eb9ebd74/</url>
    <content><![CDATA[<p>为什么会有这个网页的出现</p>
<p>梦回2022.07.13晚9点←→</p>
<p>偶然间发现我的qq签名不见了</p>
<p>也不知道签名掉了多久了</p>
<p>于是乎开始翻好友的qq签名</p>
<p>直到我看到了个签名<code>https://niceb.icu</code> </p>
<p>打开浏览器果不其然</p>
<img no-lazy src="./404.png" width="30%"/>

<p>但也从那时开始有了现在这个网页的计划</p>
<p>搞个破网页几个小时就能上线</p>
<p>那么这篇beginning为什么<code>date: 2022-07-16 23:29:55</code></p>
<p><code>2022.07.14-2022.07.16</code>我干啥了</p>
<p>首先，我肯定没有在摸鱼</p>
<details><summary>纠结了3天取什么域名 </summary>
<code>以下省略3天的极限拉扯</code>
</details>

<p>最终有了现在的<code>cinnabar.icu</code> （虽然写到这里的时候我还没去绑域名）</p>
<details><summary>什么是cinnabar</summary>
<blockquote cid="n122" mdtype="blockquote"><p cid="n132" mdtype="paragraph" contenteditable="true" class="md-end-block md-p"><span md-inline="del" class="md-pair-s"><del><span md-inline="plain" class="md-plain">Cinnabar or cinnabarite, from the Ancient Greek: κιννάβαρι, is the bright scarlet to brick-red form of mercury(II) sulfide. It is the most common source ore for refining elemental mercury, and is the historic source for the brilliant red or scarlet pigment termed vermilion and associated red mercury pigments.</span></del></span></p></blockquote>
看看封面cover<br/>
如果还不知道就去看看<span md-inline="code" spellcheck="false" class="md-pair-s md-expand"><code>宝石之国</code></span><br/>
<blockquote cid="n132" mdtype="blockquote"><p cid="n152" mdtype="paragraph" contenteditable="true" class="md-end-block md-p"><span md-inline="plain" class="md-plain">我一定会找到 </span></p><p cid="n153" mdtype="paragraph" contenteditable="true" class="md-end-block md-p"><span md-inline="plain" class="md-plain">比夜间巡逻更快乐 </span></p><p cid="n154" mdtype="paragraph" contenteditable="true" class="md-end-block md-p"><span md-inline="plain" class="md-plain">只有你才能做的工作 </span></p><p cid="n155" mdtype="paragraph" contenteditable="true" class="md-end-block md-p"><span md-inline="plain" class="md-plain"> </span><span md-inline="tab" class="md-tab"></span><span md-inline="plain" class="md-plain">&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;——磷叶石</span></p></blockquote>
</details>
<details><summary>这个小破站是干什么的 </summary>
<code>// TODO: </code>
<style>
hide {
  background-color: #000000;
  color: #000000;
}
hide:hover {
  background-color: white;
  color: black;
}
</style>
<hide>涩涩才是第一生产力！</hide>
</details>


]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>关于网站的一些优化</title>
    <url>/posts/485af310/</url>
    <content><![CDATA[<p>有空了想起来了就弄一弄</p>
<div style="width:100%; display:flex;">
    <div style="margin-right: 20px">
        &#9745; <a class="toc-link" href="#1">网站主题</a><br>
        &#9745; <a class="toc-link" href="#2">图床</a><br>
        &#9744; <a class="toc-link" href="#3">图片懒加载</a><br>
        &#9744; <a class="toc-link" href="#4">返回顶部按钮</a><br>
        &#9745; <a class="toc-link" href="#5">文章加密</a><br>
        &#9745; <a class="toc-link" href="#6">简化文章链接</a><br>
        &#9744; <a class="toc-link" href="#7">Live2d小人</a><br>
        &#9745; <a class="toc-link" href="#8">代码压缩</a><br>
        &#9745; <a class="toc-link" href="#9">显示文章更新时间</a><br>
        &#9744; <a class="toc-link" href="#10">文章置顶</a><br>
    </div>
    <div>
       &#9744; <a class="toc-link" href="#11">侧边栏小组件</a><br>
       &#9744; <a class="toc-link" href="#12">评论功能</a><br>
       &#9745; <a class="toc-link" href="#13">自定义404页面</a><br>
       &#9745; <a class="toc-link" href="#14">锚点链接偏移</a><br>
       &#9744; <a class="toc-link" href="#15">代码高亮</a><br>
       &#9744; <a class="toc-link" href="#16">自定义标签云</a><br>
    </div>
</div>

<h3 id="1">网站主题</h3>

<p><a href="https://github.com/Fechin/hexo-theme-diaspora">Diaspora</a></p>
<p>修改配置文件 <code>_config.yml</code> 中主题 theme</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">diaspora</span></span><br></pre></td></tr></table></figure>

<h3 id="2">图床</h3>

<style>
hide {
  background-color: #000000;
  color: #000000;
}
hide:hover {
  background-color: white;
  color: black;
}
</style>
<p><a href="https://www.superbed.cn/">聚合图床</a> <hide>免费白嫖还好用</hide></p>
<h3 id="3">图片懒加载</h3>

<p><a href="https://github.com/Troy-Yang/hexo-lazyload-image">hexo-lazyload-image</a></p>
<p>整合进项目了但暂时 <code>enable: false</code></p>
<p>在图片墙（例如<a href="/posts/fb4226a7/" title="回归初心">回归初心</a>）中使用懒加载可能会导致初次 &lt;img&gt; 链接无法获取的问题</p>
<h3 id="4">返回顶部按钮</h3>



<h3 id="5">文章加密</h3>

<p><a href="https://github.com/MikeCoder/hexo-blog-encrypt">hexo-blog-encrypt</a></p>
<p>需要加密的文件在 <code>front matter</code> 中添加 <code>password: xxx</code></p>
<p>配置参数还挺多的，以后碰到问题再说</p>
<h3 id="6">简化文章链接</h3>

<p><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a></p>
<p>修改配置文件<code>_config.yml</code>中<code>permalink</code>字段</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span> </span><br></pre></td></tr></table></figure>

<h3 id="7">Live2d小人</h3>

<p><a href="https://www.jianshu.com/p/a7f4a42e4b49">教程？</a></p>
<p>或许也可以考虑下使用<a href="https://github.com/stevenjoezhang/live2d-widget">live2d-widget</a></p>
<h3 id="8">代码压缩</h3>

<p><del>考虑使用 <a href="https://github.com/rozbo/hexo-neat">hexo-neat</a> 或者 gulp</del></p>
<p>使用 <a href="https://github.com/rozbo/hexo-neat">hexo-neat</a> 进行代码压缩</p>
<p><hide>cnm</hide> <code>特别注意不要使用 npm install hexo-neat --save 这玩意最后一次更新在2年前</code> <hide>cnm</hide></p>
<p>第三方 js 使用第三方 cdn 引入</p>
<h3 id="9">显示文章更新时间</h3>

<p>使用脚本自动更新<code>front matter</code>中的<code>updated</code>字段</p>
<p>不想用<a href="https://moeci.com/posts/2022/01/powershell-hexo-updated/">检查 git log</a>的方法最终使用了<a href="https://www.cnblogs.com/yyyzyyyz/p/15792199.html">读取文件信息</a>的方法</p>
<p>在<code>article.ejs</code>布局文件中添加显示样式</p>
<h3 id="10">文章置顶</h3>




<h3 id="11">侧边栏小组件</h3>

<p><code>主要是想给个地方显示最近更新的文章</code></p>
<h3 id="12">评论功能</h3>

<p>考虑使用 <code>Valine</code> 代替主题自带的 <code>gitalk</code></p>
<p><hide>也可能不</hide></p>
<p>暂时没需求懒得弄</p>
<h3 id="13">自定义404页面</h3>

<p>Hexo 提供了跳过渲染功能</p>
<p><del><a href="https://qianling.pw/custom-web-page/">Hexo 跳过渲染，创建自定义网页</a></del></p>
<p>上面那个因为主题还是插件问题好像不太好使</p>
<p>用<a href="https://blog.csdn.net/cungudafa/article/details/106199111">这个</a></p>
<h3 id="14">锚点链接偏移</h3>

<p>一般写法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">定义锚记：[跳转指定位置](#jumpto)</span><br><span class="line">需要跳转的地方：&lt;xxx id=&quot;jumpto&quot;&gt; 我是目标位置 &lt;/xxx&gt;</span><br></pre></td></tr></table></figure>

<p>但由于 header bar 的存在会造成相关部分的内容的遮盖</p>
<p>因此需要对跳转的位置进行偏移</p>
<p>大致的一个实现方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hash = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">to = $(<span class="built_in">decodeURI</span>(hash))</span><br><span class="line">$(<span class="string">&quot;html,body&quot;</span>).<span class="title function_">animate</span>(&#123;</span><br><span class="line">	<span class="attr">scrollTop</span>: to.<span class="title function_">offset</span>().<span class="property">top</span> - <span class="number">50</span></span><br><span class="line">&#125;, <span class="number">300</span>);</span><br></pre></td></tr></table></figure>

<p>这里由于主题中 TOC 的存在直接进行一个懒的偷</p>
<p><code>case (tag.indexOf(&#39;toc-text&#39;) != -1 || tag.indexOf(&#39;toc-link&#39;) != -1 || tag.indexOf(&#39;toc-number&#39;) != -1):</code></p>
<p>在 &lt;a&gt; 中添加 <code>class=&quot;toc-text/toc-link/toc-number&quot;</code> 即可解决问题</p>
<h3 id="15">代码高亮</h3>

<p><a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a></p>
<p>懒 下次弄 <hide><del>草 忘记 markdown 自带的 highlight 要输入语言才会高亮</del></hide></p>
<h3 id="16">自定义标签云</h3>

<p>有两种</p>
<ul>
<li><p><a href="https://github.com/D0n9X1n/hexo-tag-cloud">hexo-tag-cloud</a> 挺好看的 <hide>华而不实</hide></p>
</li>
<li><p><a href="https://cungudafa.blog.csdn.net/article/details/104616500">自定义标签云</a> 这种可以放在文章末尾</p>
</li>
</ul>
]]></content>
      <categories>
        <category>大饼</category>
      </categories>
      <tags>
        <tag>连载中</tag>
      </tags>
  </entry>
  <entry>
    <title>开发日志1</title>
    <url>/posts/a9632716/</url>
    <content><![CDATA[<p>前天开始决定偷跑一下钓鱼游戏</p>
<p>躺床上花了点时间起草了一份设计书  <hide>然后睡着了</hide></p>
<p>一觉起来 太棒了 <hide>写的是个邒</hide></p>
<p>修修补补 =&gt; 2022‎年‎7‎月‎31‎日 ‏‎11:43:44 新建<code>Bullet_Fishing</code>文件夹</p>
<p>把设计书.md放入其中</p>
<p>又是修修补补</p>
<p>然后顺便画了张布局图</p>
<p>想了下还是用 unity + mysql 来实现吧</p>
<p>更新了个 unity =&gt; ‎2022‎年‎7‎月‎31‎日 ‏‎22:09:59 新建<code>Bullet_Fishing\bullet-fishing</code>的 unity 工程文件夹</p>
<p><hide>我他妈为什么当时更新 unity 时候不顺带下个 vs</hide></p>
<h3 id="当-vscode-遇到-unity"><a href="#当-vscode-遇到-unity" class="headerlink" title="当 vscode 遇到 unity"></a>当 vscode 遇到 unity</h3><ol>
<li>在 unity 中，配置 Edit&gt;Preferences&gt;External Tools&gt;External Script Editor 选择 Visual Studio Code</li>
<li>在 vscode 中安装 C# 以及 unity 相关插件</li>
</ol>
<p>然后就<hide>应该</hide>可以使用了</p>
<p>但核心插件 C# 在启动时会报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The .NET Core SDK cannot be located. .NET Core debugging will not be enabled. Make sure the .NET Core SDK is installed and is on the path. </span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<ol>
<li>下载 <a href="https://dotnet.microsoft.com/zh-cn/download/dotnet/sdk-for-vs-code">.Net SDK</a> 并安装 注意环境变量是否配置（如果报错可能需要重启）</li>
<li>根据 <code>Assembly-CSharp.csproj</code> 文件中的 <code>TargetFrameworkVersion</code> 下载对应版本 (v4.7.1) <a href="https://dotnet.microsoft.com/en-us/download/dotnet-framework/net471">.NET Framework</a></li>
<li>重启 vscode</li>
</ol>
<hr>
<h3 id="unity-项目框架"><a href="#unity-项目框架" class="headerlink" title="unity 项目框架"></a>unity 项目框架</h3><p>工欲善其事必先利其器</p>
<p>自己以前弄的找不到了</p>
<p><a href="https://blog.csdn.net/TongOuO/article/details/122764529">框架</a> 这次就用这个修修补补</p>
<p>以后考虑使用整合框架，如 <a href="https://github.com/ALEXTANGXIAO/TEngine">TEngine</a> </p>
<hr>
<p>然后就是数据库的设计</p>
<p>本来想玩一玩关系图然后去下了个<code>一款简单好用的数据库建模平台</code> <a href="https://gitee.com/link?target=https://my.oschina.net/skymozn">Pdmaner</a></p>
<p>感觉也没有多好用.jpg</p>
<p>接着滚回去用我的 navi猫</p>
<p>简简单单写了16个表后我也不想画关系图了</p>
<p>和设计书一样其中 50+% 的内容是不会在 v0.1 中出现的</p>
<p>开摆！</p>
<h3 id="日-我设计了个锤子的表"><a href="#日-我设计了个锤子的表" class="headerlink" title="日 我设计了个锤子的表"></a>日 我设计了个锤子的表</h3><p>有张表叫 <code>player_item</code> </p>
<p>是用来记录玩家获得物品的表</p>
<p>有 <code>num</code> 、 <code>created_time</code> 和 <code>obtain_method</code> 三个字段</p>
<p>为了偷懒每个人的每件物品只会有一条数据</p>
<p><code>UNIQUE INDEX `idx_uid_item_id`(`uid`, `item_id`) USING BTREE</code> </p>
<p>然后每次使用或者获得进行更新</p>
<p>那问题来了：</p>
<p><hide>每次更新都在一条数据上操作<br>那这后面 <code>created_time</code> 和 <code>obtain_method</code>两个字段还有个锤子用<br>总不能每次增加/减少记录一条并且 <code>count</code> 允许负数、 <code>obtain_method</code> 增加使用属性吧<br>然后每次查询语句长的一批</hide></p>
<hr>
<h3 id="Mysql-Data-dll-版本问题"><a href="#Mysql-Data-dll-版本问题" class="headerlink" title="Mysql.Data.dll 版本问题"></a>Mysql.Data.dll 版本问题</h3><p>一般unity项目中的 <code>Scripting Runtime Version</code> 设置的是3.5</p>
<p>所以 mysql.data.dll 要选择 .net3.5 版本的</p>
<p>4.0版本的会报错</p>
<hr>
<p><a href="https://gameconductor.net/blog/unity-test-framework-tutorial.html">unity 单元测试教程</a></p>
<h4 id="在这里"><a href="#在这里" class="headerlink" title="在这里"></a>在这里</h4><h3 id="我宣布"><a href="#我宣布" class="headerlink" title="我宣布"></a>我宣布</h3><h2 id="最强插件"><a href="#最强插件" class="headerlink" title="最强插件"></a>最强插件</h2><h1 id="Github-Copilot"><a href="#Github-Copilot" class="headerlink" title="Github Copilot"></a>Github Copilot</h1><hr>
<h3 id="反射-SetValue-碰到-DBNull-时无法转换成-String"><a href="#反射-SetValue-碰到-DBNull-时无法转换成-String" class="headerlink" title="反射 SetValue 碰到 DBNull 时无法转换成 String"></a>反射 SetValue 碰到 DBNull 时无法转换成 String</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">System.ArgumentException : Object of type &#x27;System.DBNull&#x27; cannot be converted to type &#x27;System.String&#x27;.</span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// propertyInfo.SetValue(t, row[columnName], null);</span></span><br><span class="line">propertyInfo.SetValue(t, row[columnName] == DBNull.Value ? <span class="built_in">string</span>.Empty : row[columnName], <span class="literal">null</span>);</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="C-中的三目运算符"><a href="#C-中的三目运算符" class="headerlink" title="C# 中的三目运算符"></a>C# 中的三目运算符</h3><p>理想中的使用方法：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">occurTime &gt; fish.DisappearTime ? Destroy(gameObject) : SetInitInfo();</span><br></pre></td></tr></table></figure>

<p>这在 C / C++ 中显然能运行的语句在 C# 中</p>
<p><code>Error: 只有 assignment、call、increment、decrement 和 new 对象表达式可用作语句 </code></p>
<p>简而言之就是必须返回点什么东西…</p>
<p>要在三目运算符中调用 <code>void</code> 方法可以使用委托</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">(condtion ? (System.Action)A : B)();</span><br></pre></td></tr></table></figure>

<p>这还不算完，如果调用的函数带有参数，那又得更麻烦，可以使用 Lambda 表达式：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">(occurTime &gt; fish.DisappearTime ? <span class="keyword">new</span> System.Action(() =&gt; Destroy(gameObject)) : () =&gt; SetInitInfo())();</span><br></pre></td></tr></table></figure>

<p><hide>？？？我用 if/else 不香嘛</hide></p>
<hr>
<p>不知不觉已经 8 月 6 号了，git push 完来随便写一点</p>
<p>弄了个测试池子，画了点测试用鱼，写了点逻辑</p>
<p>先来个鱼的全家福</p>
<img src="./test-fish.png" width="50%"/>

<p>为了方便鱼的运动方向是平行于 x 轴的</p>
<p>选择一条鱼 -&gt; 生成一条鱼 -&gt; 让鱼游起来 -&gt; 设定初始点 -&gt; 让鱼会转向 -&gt; 生成一池鱼 -&gt; 避免鱼重叠</p>
<p>如何避免重叠 =&gt; 使用碰撞盒来检测是否相遇</p>
<p>像 <code>OnTriggerEnter</code> 这一类在碰撞的时候是会同时发送给两方</p>
<p>所以每条鱼只要处理自己的逻辑即可</p>
<img src="./onTriggerEnter.png"/>

<p>然后加上鱼王的话，为了提现鱼王的地位，最后弄成了这个逻辑</p>
<img src="./onTriggerEnter2.png"/>

<p><hide>看这个流程图能看明白就见鬼了 流程图真的不适合用来描述复杂判断语句</hide></p>
<p>简单来说就是 <code>大鱼吃小鱼，鱼王最威武</code></p>
<p>有了鱼碰撞盒那我又为了偷懒给池子搞了个大的碰撞盒</p>
<p>当鱼离开池子的 box 触发 <code>OnTriggerExit</code> 的时候调用 <code>SetInitInfo</code> 重新随机鱼的位置</p>
<p>偶然间发现 <code>SetInitInfo</code> 会有额外的触发</p>
<p>也就是说</p>
<h4 id="如果对象在处于有触发碰撞的情况下被-Destroy，会触发-OnTriggerExit"><a href="#如果对象在处于有触发碰撞的情况下被-Destroy，会触发-OnTriggerExit" class="headerlink" title="如果对象在处于有触发碰撞的情况下被 Destroy，会触发 OnTriggerExit"></a>如果对象在处于有触发碰撞的情况下被 Destroy，会触发 OnTriggerExit</h4><p>虽然修了这个问题但写到这里还是觉得身上有七七四十九只蚂蚁在爬</p>
<p>尤其是还弄了个 onDestroy 的变量</p>
<p>重构代码去了…</p>
<p><code>15 minutes later...</code></p>
<p>改完舒服了，顺便还重构了点别的，看上去没什么问题</p>
<hr>
<p>说到随机初始位置这儿那有小故事讲了</p>
<h3 id="小心使用-While-true"><a href="#小心使用-While-true" class="headerlink" title="小心使用 While (true)"></a>小心使用 While (true)</h3><p>想法是这样的，如果随机的新位置和现有的鱼会重叠，那么重新随机，直至找到一个新的可以放下的位置</p>
<p>怎么想都很简单</p>
<p>第一版</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Vector3 initPosition = <span class="keyword">new</span> Vector3();</span><br><span class="line"><span class="built_in">float</span> faceTo = Random.<span class="keyword">value</span> &lt; <span class="number">0.5f</span> ? <span class="number">-1f</span> : <span class="number">1f</span>;</span><br><span class="line">initPosition.x = ...</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="built_in">bool</span> isOverlap = <span class="literal">false</span>;</span><br><span class="line">    initPosition.y = ...</span><br><span class="line">    <span class="keyword">foreach</span> (FishInstance fishInstance <span class="keyword">in</span> fishList) &#123;</span><br><span class="line">        <span class="keyword">if</span> (boxCollider.IsTouching(fishInstance.boxCollider)) &#123;</span><br><span class="line">            isOverlap = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!isOverlap) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：Unity Editor 未响应</p>
<p>死因：fishList 里有当前的鱼，自己盒子碰自己不是必定 overlap 然后死循环？</p>
<p>第二版</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// if (boxCollider.IsTouching(fishInstance.boxCollider))</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> != fishInstance &amp;&amp; boxCollider.IsTouching(fishInstance.boxCollider))</span><br></pre></td></tr></table></figure>

<p>结果：Unity Editor 未响应</p>
<p>死因：终于发现随机出来的新位置根本没有用上，还是在用原来的碰撞盒进行检测</p>
<p>举个例子</p>
<p>在池子外左侧的小鱼 A 向右运动，碰到了在向左运动的小鱼 B</p>
<p>小鱼 A 的速度比小鱼 B 快，所以小鱼 A 转头调用函数 TurnAround</p>
<p>在 TurnAround 最后会检测如果在池子外且远离池子那么就重新随机初始位置</p>
<p>所以小鱼 A 就需要重新随机初始位置，此时小鱼 A 和 小鱼 B 的碰撞盒是 Touching 的</p>
<p>寄</p>
<p>第三版</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">Bounds newBounds = <span class="keyword">new</span> Bounds(initPosition, boxCollider.bounds.size);</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    ...</span><br><span class="line">    newBounds.center = initPosition;</span><br><span class="line">    <span class="keyword">if</span> (newBounds.Intersects(fishInstance.boxCollider.bounds))</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：Unity Editor 未响应</p>
<p>死因：自己把自己卡死了…</p>
<p>因为测试时候大鱼的尺寸相对于池子来说还是挺大的，大鱼在靠近池子中间的位置离开然后触发重新随机位置</p>
<p>由于在第一版中将 faceTo 的随机扔在了 while 外面，所以如果运气不好随机到了和当前位置同一边</p>
<p>那无论在哪个高度放置都会和先前的位置发生碰撞</p>
<p>但这个时候我还没有意识到 faceTo 的问题</p>
<p>第四版</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// if (newBounds.Intersects(fishInstance.boxCollider.bounds))</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> != fishInstance &amp;&amp; newBounds.Intersects(fishInstance.boxCollider.bounds))</span><br></pre></td></tr></table></figure>

<p>结果：Unity Editor 未响应</p>
<p>死因：被别的大鱼卡死了</p>
<p>最终版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while (true) &#123;</span><br><span class="line">    ...</span><br><span class="line">    float faceTo = ...</span><br><span class="line">    initPosition.x = ...</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：Unity Editor 存活</p>
<p>真要说如果两边各一条大鱼当道，还是能卡死你</p>
<p>但是</p>
<p>这种情况并不会发生！答案在下面</p>
<p>所以说小心使用 While (true) 以及软件测试员真的很重要</p>
<hr>
<p>然后说说 Unity 未响应这件事</p>
<img src="./unity-crash.png" width="30%"/>

<p>图文没有关系<br>图文没有关系<br>图文没有关系</p>
<p>重要的事情说三遍！</p>
<p><hide>图片里的叫 Unity Crash</hide></p>
<p>歪个楼：<a href="https://niceb.icu/2022/08/05/%E8%BF%91%E6%9C%9F%E6%9C%89%E7%BD%91%E5%8F%8B%E8%AF%A2%E9%97%AEunity%E6%AD%BB%E5%BE%AA%E7%8E%AF%E7%9A%84%E9%97%AE%E9%A2%98/">近期有网友询问unity死循环的问题</a></p>
<p>接着说鱼的事</p>
<p>现在要在每条鱼上方绑一个可以实时更新的信息牌</p>
<p>信息牌是需要挂在 UI 的 canvas 层下的</p>
<p>位置需要从世界坐标系中转换到屏幕坐标系中</p>
<p>好久没用 Unity 发现以前的 Text 组件已经被放到 Legacy 类下了</p>
<p>取而代之的是 <code>TMP</code>，还没怎么仔细看</p>
<p>UI 的获取和更新在 BasePanel 基类的帮助下还是挺简单的</p>
<p>但一想到后面要给 UI 加动画就脑壳疼</p>
<p>盯着池子观察了会儿发现一个问题</p>
<p>基于上面的 <code>大鱼吃小鱼</code> 的碰撞处理逻辑</p>
<p>若干时间后池子里会变成大鱼的天堂</p>
<p><code>弱肉强食，适者生存</code></p>
<p>要解决也很简单，限制池子里的大鱼最多只有一条</p>
<p>至于鱼王部分</p>
<p>这是<del>今天</del>昨天最后写的一块内容</p>
<p>放到下一个开发日志中讲吧</p>
<p>东西应该还挺多的</p>
<p>然后讲讲池子</p>
<p>最重要的就是刷新机制，总不可能一直在一个地方钓鱼</p>
<p><code>这里的鱼现在警惕性很高 看来还是换个地点比较好</code></p>
<p>为了防止随机到当前池子</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> offset = Random.Range(<span class="number">1</span>, pools.Count);</span><br><span class="line">currentPoolIndex = (currentPoolIndex + offset) % pools.Count;</span><br></pre></td></tr></table></figure>

<p>那为什么我每次随到同一个池子？<hide>因为我只有一个池子</hide></p>
<p>有了池子的随机切换，那就需要一个面板来进行提示</p>
<p>在初步的 Layout 中池子的信息在右上角</p>
<p>除了会显示当前池子、下一个池子、切换倒计时之外</p>
<p>还会显示鱼王的相关信息以及玩家钓鱼的信息</p>
<p>现在大概弄了一小半吧</p>
<p>现在是北京时间 ‎2022‎年‎8月‎7‎日 ‏‎00:22:15</p>
<p><hide>我他妈 Lycoris Recoil 更新了</hide></p>
<p><hide>还写个鸡儿</hide></p>
]]></content>
      <categories>
        <category>开发日志</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>开发日志2</title>
    <url>/posts/306a76ac/</url>
    <content><![CDATA[<p><del>先新建放着</del></p>
<p><del>我主要想看看开发日志1的封面</del></p>
<img src="//pic.imgdb.cn/item/62f0fedb16f2c2beb18974b6.gif" width="30%" style="margin-bottom: 20px"/>

<p><button class="liquid"><span>841340484181</span><div class="liquid"></div></button> </p>
<p>做了件事情</p>
<p>把 Camera 的位置移到了池子上沿的中点</p>
<p>感觉后面写左右对称的钓鱼的逻辑的时候会方便很多很多</p>
<p><button class="liquid"><span>571624202280</span><div class="liquid"></div></button></p>
<p>突然想到个问题：鱼会向后游嘛</p>
<p>感觉没见过有丶反直觉</p>
<p>于是去问了问神奇海螺</p>
<h3 id="鱼会不会倒着游？"><a href="#鱼会不会倒着游？" class="headerlink" title="鱼会不会倒着游？"></a>鱼会不会倒着游？</h3><p>倒着游分为两种：一种是向后游，一种是仰泳</p>
<blockquote>
<p>蝴蝶鱼的尾部或背鳍上通常有一个斑点，这是它们的“假眼”而它们真正的眼睛隐藏在头部的黑色条纹中，不易被发现。蝴蝶鱼倒着游时，能让敌人误以为它们的尾巴是头。当敌人发起攻击时，它们一摇尾巴就可以很快地逃走了。</p>
</blockquote>
<blockquote>
<p>一般中、大型鱼和一些小型鱼，比如像孔雀鱼这样的卵胎生鱼类，在追求异性的时候会向后游，大型鱼在打架时也会倒游，但是不能一直倒游，只能向后一小段距离<br>有一种热带鱼，叫反游猫，可以肚皮朝上游，但在大多时候还是和正常鱼一样肚皮朝下游。</p>
</blockquote>
<hr>
<p>感觉有些东西还是有必要记录一下的</p>
<p>于是随手搞了个新玩意</p>
<p>嘻嘻</p>
<p>模板：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;liquid&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>xxxxxxxx<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;liquid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p><button class="liquid"><span>xxxxxxxx</span><div class="liquid"></div></button></p>
<p>顺便记录一下最强插件的一些骚操作</p>
<ol>
<li><p>虽然我看不懂但好像没有问题</p>
<img src="./copilot1.png"/></li>
<li><p>以后我一定好好写注释</p>
<img src="./copilot2.png"/></li>
<li><p>当我又好像不需要写注释</p>
<img src="./copilot4.png"/></li>
<li><p>一个优秀的代码决不允许8层 if 嵌套</p>
<img src="//pic.imgdb.cn/item/62fba74c16f2c2beb1201eb2.png"/></li>
<li><p>究竟想要 Remove 什么东西</p>
<img src="//pic.imgdb.cn/item/62fba74c16f2c2beb1201eb5.png"/>

<p>&lt; 未完待续 &gt;</p>
</li>
</ol>
<p>回归正题</p>
<p>好像在<a href="/posts/a9632716/" title="开发日志1">开发日志1</a>中都没提到游戏的玩法</p>
<p>首先这是一个弹幕互动游戏，所以必须要考虑到直播延迟的问题</p>
<p>一般正常延迟在 5s 左右吧</p>
<p>游戏核心分成两部分：抛竿和提竿</p>
<p>一杯茶一包烟，一根鱼竿钓一天</p>
<p><del>钓鱼佬的鱼都从菜市场买来的</del></p>
<p>当然不能做成抛完杆然后每隔一小时来看一下鱼有没有上钩</p>
<p>但我也不想做成抛完杆 Random.Value &lt; 0.1 ? “鱼上钩了” : “鱼不见了”</p>
<p>所以最终通过发送角度来控制抛竿的方向，其中会有延迟和风速的叠加影响</p>
<p>至于角度会在每条鱼的上方进行辅助显示</p>
<p>虽然但是这更像插鱼或者是黄金矿工，但至少从一成品来看还行</p>
<p>鱼上钩之后要开始和鱼拉扯</p>
<p>每条鱼会有若干不同的规则</p>
<p>每个玩家会有若干骰子</p>
<p>每隔一段时间会掷骰子</p>
<p>然后根据规则计算骰子所对应的点数，以此作为拉力</p>
<p>当然如果线断了那鱼就跑了</p>
<p><del>一起加油努力钓鱼吧，各种成就奖励等你来发现</del></p>
<p>至于在<a href="/posts/a9632716/" title="开发日志1">开发日志1</a>中提到的鱼王相关的部分当然是咕咕咕到开发日志3中</p>
<p><button class="liquid"><span>562993211210</span><div class="liquid"></div></button></p>
<p>记录一个鬼故事，可能哪天又会重现于世</p>
<p>在掷骰子后需要根据结果设置鱼的速度</p>
<p>运行时有一次一条鱼宛如死鱼一样一动不动</p>
<p>观察发现在速度设置完后极短时间被一股神秘力量归零了…</p>
<p>将可能的地方都打上断点进行测试</p>
<p>一个都没有触发…</p>
<p>然后重开了测试之后再也没有碰到了…</p>
<p><code>每次 git commit 时候看到被修改的文件都有几十个总觉得自己做了很多事，谢谢 Unity</code> </p>
<p><button class="liquid"><span>562892492624</span><div class="liquid"></div></button></p>
<p>终于在若干天前完成了 v0.0.1 版本的测试</p>
<p>直播测试达到了预期的效果，光荣下播</p>
<p><code>噜噜噜，啊哇哇</code></p>
<p>这里记录一下目前为止实现了一些什么功能</p>
<ol>
<li><br><br><br><br><br><br><br><br><br><br><br><br><span style="color:white">提笔又止</span><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><span style="color:white">提笔㕛止</span><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><span style="color:white">提笔叒止</span><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><span style="color:white">提笔叕止</span><br><br><br><br><br><br><br><br><br><br><br><br><br><br></li>
</ol>
<p>啊我不想写</p>
<hr>
<p>为什么 FF14 的房子只有 400 个家具位</p>
<p>不想封层</p>
<p>稍微设计下 400 个家具位就没了</p>
<p>房子不想装修 日志不想记录</p>
<p>怕不是得了<hide>电子阳痿</hide></p>
<details><summary>那贴一张图吧</summary>
<img src="//pic.imgdb.cn/item/62fc93db16f2c2beb1820c9a.png"/>
</details>

<p>这张纸包含了整个项目最难的部分</p>
<p>如何将错综复杂的规则有一种比较优雅的方式用一种统一的方式存在一张表里</p>
<p>规则包括但不限于：相同，不同，存在，不存在，大于，小于，总和，指定区域等等以及它们的组合</p>
<p>最终设计用了 <code>8</code> 个字段来实现了对 95% 规则的统一描述</p>
<p>CheckRule 函数只有 104 行</p>
<p>当时写完测试完修完 bug 之后我以为整个项目中的难点已经过去了</p>
<p>但其实噩梦才刚刚开始</p>
<blockquote>
<p>建议到百万数据的时候再考虑这个问题</p>
</blockquote>
<p>9个骰子一共有 <code>10077696</code> 种组合</p>
<p>对于某一种组合判断是否满足规则很简单</p>
<p>但要找出符合符合一条规则的所有组合却很难</p>
<p>因而评判多条规则之间的耦合程度（同时满足多条规则的组合的加权和）更是难上加难</p>
<p>有两种解决方法：</p>
<ol>
<li><p>按规则分类每种规则写一套求解方法</p>
<p>优点：在写求解代码的时候规则有直观的表示，并且可以根据每大类的特点进行优化求解思路，从而达到更快的求解速度</p>
<p>缺点：需要先对规则进行分类，代码量相比第二种会大很多（我觉得），后期每次加入新规则都需要进行维护扩写新分支</p>
</li>
<li><p>硬着头皮逆向一套求解方法适用所有规则</p>
<p>优点：一次写完终身受益 <hide>这一条还不够嘛</hide></p>
<p>缺点：我是谁，我在写什么，我要写什么，我为什么这么写。所有逻辑顺序全靠脑补，debug 困难，多重嵌套（嵌中嵌中嵌）</p>
</li>
</ol>
<p>可想而知我选择了<hide>第二条路</hide></p>
<p>于是就小手一抖敲了 500+ 行代码</p>
<p>其中最多的地方是 11 层嵌套</p>
<pre>                                                    tempSum += diceBase[scopeDiceList[j]] * (tempList[j] - 1);</pre>

<p>体会一下这个缩进…</p>
<p>至此规则部分只剩下最后一块碎片没有完成了</p>
<p>如何分配超额完成每条规则后的额外奖励系数以及在规则抽选时候的耦合系数的阈值设定</p>
<p>暂时还没有想到很好的方法</p>
<p>所以就去 ff14 里设计装修了</p>
<p>设计了一套整体主题为迷宫的装修</p>
<p>为了有效利用空间并有充实的内容</p>
<p>400 个家具位基本都用完了才勉勉强强完成雏形</p>
<p>其中包括两个主谜题区和三个艺术区</p>
<p>要精装修是不可能了</p>
<p>个人还是挺喜欢的</p>
<p>虽然但是不能精装修有丶可惜</p>
<p>还在纠结要不要换个主题封个层</p>
<p>纠 <span style="font-size: 50px;color: red;position: relative;top: 5px;margin: 0 -10px;">大</span> 结</p>
<p><hide>感觉这个项目也许可能大概要暂时停摆一段时间了</hide></p>
]]></content>
      <categories>
        <category>开发日志</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>毁灭者机器人</title>
    <url>/posts/5864006a/</url>
    <content><![CDATA[<div style="display:flex;width:100%"><img src="//pic.imgdb.cn/item/6304c9ce16f2c2beb1defc41.png" style="width:50%"/><img src="//pic.imgdb.cn/item/6304c9cd16f2c2beb1defba8.png" style="width:50%"/></div>



<img src="//pic.imgdb.cn/item/6304c9ce16f2c2beb1defbf8.png"/>



<p><hide>消耗了微量的皮肤和指甲<br>果然相比圆的我还是更喜欢方的</hide></p>
]]></content>
      <categories>
        <category>模型</category>
      </categories>
      <tags>
        <tag>模型</tag>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>忍者相关攻略</title>
    <url>/posts/2e3e6e01/</url>
    <content><![CDATA[<p>直接开偷.</p>
<h4 id="攻略"><a href="#攻略" class="headerlink" title="攻略"></a>攻略</h4><p><a href="https://ngabbs.com/read.php?tid=31436041">6.X忍者PVE指南</a></p>
<p><a href="https://ngabbs.com/read.php?tid=32473473">下忍视角的绝龙诗开荒攻略选择及各阶段tips</a></p>
<h4 id="忍者BIS"><a href="#忍者BIS" class="headerlink" title="忍者BIS"></a>忍者BIS</h4><p><img src="https://pic.imgdb.cn/item/62d55d74f54cd3f9375db424.png" alt="600忍者bis"></p>
<p><a href="https://ngabbs.com/read.php?tid=30130621">[6.05]全职业开荒+全职业毕业配装合集(完结)</a></p>
]]></content>
      <categories>
        <category>FF14</category>
      </categories>
      <tags>
        <tag>FF14</tag>
      </tags>
  </entry>
  <entry>
    <title>Pies In The Sky</title>
    <url>/posts/b1dacaa5/</url>
    <content><![CDATA[<p>[4/9] 叠过9个就开始画</p>
<p><code>大概吧</code></p>
<hr>
<h4 id="画中画中画中画★★★☆☆"><a href="#画中画中画中画★★★☆☆" class="headerlink" title="画中画中画中画★★★☆☆"></a>画中画中画中画★★★☆☆</h4><p><a href="https://twitter.com/TheFigen/status/1551661875104022528">传送门</a></p>
<h4 id="墨水屏桌面摆件★★☆☆☆"><a href="#墨水屏桌面摆件★★☆☆☆" class="headerlink" title="墨水屏桌面摆件★★☆☆☆"></a>墨水屏桌面摆件★★☆☆☆</h4><p><a href="https://www.bilibili.com/video/BV1zd4y1S71s">传送门</a></p>
<h4 id="带副屏的模块化键盘★★★★★"><a href="#带副屏的模块化键盘★★★★★" class="headerlink" title="带副屏的模块化键盘★★★★★"></a>带副屏的模块化键盘★★★★★</h4><p><a href="https://www.bilibili.com/video/BV19V4y1J7Hx">传送门</a></p>
<h4 id="（钓鱼）弹幕游戏★★★☆☆"><a href="#（钓鱼）弹幕游戏★★★☆☆" class="headerlink" title="（钓鱼）弹幕游戏★★★☆☆"></a>（钓鱼）弹幕游戏★★★☆☆</h4><hr>
<p><code>A pie a day keeps doctor away.</code></p>
]]></content>
      <categories>
        <category>大饼</category>
      </categories>
      <tags>
        <tag>连载中</tag>
      </tags>
  </entry>
  <entry>
    <title>秦风村连载故事会</title>
    <url>/posts/78b5d78/</url>
    <content><![CDATA[<p>nga，分享你刚编好的故事</p>
<hr>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32281715">我和我的高中语文老师</a></p>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32677496">妹妹高考只考了200多分</a></p>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32824502">打了三个月游戏，才发现她有男朋友</a></p>
<p>[连载中] <a href="https://ngabbs.com/thread.php?authorid=64074814">卑微舔狗日记</a></p>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32726385">关于我上班摸鱼记录下属美工的摸鱼日常的这件事</a></p>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32763124">那一年苦逼的春节加班，丫头回来了</a></p>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=33209153">拼桌拼出来的情缘</a></p>
<p>[连载中] <a href="https://ngabbs.com/read.php?tid=32481201">和你做搭档的时候，我不用排奶轴</a></p>
]]></content>
      <categories>
        <category>树洞</category>
      </categories>
      <tags>
        <tag>连载中</tag>
      </tags>
  </entry>
  <entry>
    <title>一些有趣的事</title>
    <url>/posts/2295ea76/</url>
    <content><![CDATA[<hr>
<p>我们单位有个领导外号叫夜总会</p>
<p>知道啥意思不</p>
<p>半夜总开会</p>
<p>开到凌晨1，2点</p>
<hr>
<p>我退，我退，我再退</p>
<p>Bye，exit，logout</p>
<img src="./exit.png" style="height: 100px"/>

<hr>
<p>香蕉是一种攻击性很强的水果</p>
<p>你可以在搅拌机里加入 15 种水果</p>
<p>但要是加入 1 个香蕉</p>
<p>那它就是香蕉奶昔</p>
<p><code>水果界的唢呐</code></p>
<hr>
<p>sa~ka~na~</p>
<img src="./sakana.jpg" width="200px">

<hr>
<p>我们</p>
<p>学生公寓</p>
<p>消防负责人</p>
<p>叫做</p>
<p>祝火盛</p>
<p><hide>我超</hide></p>
<p><hide>原来是处长大人</hide></p>
<hr>
]]></content>
      <categories>
        <category>好看的</category>
      </categories>
      <tags>
        <tag>好看的</tag>
        <tag>连载中</tag>
      </tags>
  </entry>
  <entry>
    <title>可能也许大概以后会用得到的一些表达</title>
    <url>/posts/63a022e3/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="061b89e1fd5ad927740198129db15b9d6b40b7ab6d2fbd0256a0ed0166c35a14"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
    <div style="color: #9e9e9e;">如果回车没有反应，请刷新页面！</div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>学术</category>
      </categories>
      <tags>
        <tag>连载中</tag>
        <tag>表达</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次服务器扩容</title>
    <url>/posts/48bacde0/</url>
    <content><![CDATA[<p>前情提要：</p>
<img src="./error500.png" style="height: 100px"/>

<img src="./wx1.png" style="height: 80px"/>

<img src="./server1.png" style="height: 80px"/>

<hr>
<p>已知：系统所在分区已满且不记得上面运行了些什么服务</p>
<p>求：如何在不重启的情况下对目标分区进行扩容</p>
<p><code>再次感谢 niceb 同学对此次任务的技术支持</code></p>
<p><hide>不会炸吧 不会炸吧 不会炸吧 天灵灵地灵灵 老天保佑</hide></p>
<p>解：</p>
<p>查看硬盘数量和分区情况</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure>

<details><summary>[root@localhost ~]# fdisk -l</summary>
<pre>Disk /dev/sda: 214.7 GB, 214748364800 bytes, 419430400 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x00004424

<p>   Device Boot      Start         End      Blocks   Id  System<br>/dev/sda1   *        2048     2099199     1048576   83  Linux<br>/dev/sda2         2099200   146800639    72350720   8e  Linux LVM</p>
<p>Disk /dev/mapper/centos-root: 47.0 GB, 46980399104 bytes, 91758592 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes</p>
<p>Disk /dev/mapper/centos-swap: 4160 MB, 4160749568 bytes, 8126464 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes</p>
<p>Disk /dev/mapper/centos-home: 22.9 GB, 22938648576 bytes, 44802048 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes</pre></p>
</details>

<p>或者使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure>

<details><summary>[root@localhost ~]# lsblk</summary>
<pre>NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
fd0               2:0    1    4K  0 disk 
sda               8:0    0  200G  0 disk 
├─sda1            8:1    0    1G  0 part /boot
└─sda2            8:2    0   69G  0 part 
  ├─centos-root 253:0    0 43.8G  0 lvm  /
  ├─centos-swap 253:1    0  3.9G  0 lvm  [SWAP]
  └─centos-home 253:2    0 21.4G  0 lvm  /home
</pre></details>

<p>可以看到在 sda 下还有 131G 未分配的空间</p>
<h3 id="创建新分区"><a href="#创建新分区" class="headerlink" title="创建新分区"></a>创建新分区</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fdisk /dev/sda</span><br></pre></td></tr></table></figure>

<p>依次输入 n / enter / enter / enter / t /  L / 8e / w</p>
<details><summary>[root@localhost ~]# fdisk /dev/sda</summary>
<pre>Welcome to fdisk (util-linux 2.23.2).

<p>Changes will remain in memory only, until you decide to write them.<br>Be careful before using the write command.</p>
<p>Command (m for help): n<br>Partition type:<br>   p   primary (2 primary, 0 extended, 2 free)<br>   e   extended<br>Select (default p):<br>Using default response p<br>Partition number (3,4, default 3):<br>First sector (146800640-419430399, default 146800640):<br>Using default value 146800640<br>Last sector, +sectors or +size{K,M,G} (146800640-419430399, default 419430399):<br>Using default value 419430399<br>Partition 3 of type Linux and of size 130 GiB is set</p>
<p>Command (m for help): t<br>Partition number (1-3, default 3):<br>Hex code (type L to list all codes): L</p>
<p> 0  Empty           24  NEC DOS         81  Minix / old Lin bf  Solaris<br> 1  FAT12           27  Hidden NTFS Win 82  Linux swap / So c1  DRDOS/sec (FAT-<br> 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS/sec (FAT-<br> 3  XENIX usr       3c  PartitionMagic  84  OS/2 hidden C:  c6  DRDOS/sec (FAT-<br> 4  FAT16 &lt;32M      40  Venix 80286     85  Linux extended  c7  Syrinx<br> 5  Extended        41  PPC PReP Boot   86  NTFS volume set da  Non-FS data<br> 6  FAT16           42  SFS             87  NTFS volume set db  CP/M / CTOS / .<br> 7  HPFS/NTFS/exFAT 4d  QNX4.x          88  Linux plaintext de  Dell Utility<br> 8  AIX             4e  QNX4.x 2nd part 8e  Linux LVM       df  BootIt<br> 9  AIX bootable    4f  QNX4.x 3rd part 93  Amoeba          e1  DOS access<br> a  OS/2 Boot Manag 50  OnTrack DM      94  Amoeba BBT      e3  DOS R/O<br> b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD/OS          e4  SpeedStor<br> c  W95 FAT32 (LBA) 52  CP/M            a0  IBM Thinkpad hi eb  BeOS fs<br> e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         ee  GPT<br> f  W95 Ext’d (LBA) 54  OnTrackDM6      a6  OpenBSD         ef  EFI (FAT-12/16/<br>10  OPUS            55  EZ-Drive        a7  NeXTSTEP        f0  Linux/PA-RISC b<br>11  Hidden FAT12    56  Golden Bow      a8  Darwin UFS      f1  SpeedStor<br>12  Compaq diagnost 5c  Priam Edisk     a9  NetBSD          f4  SpeedStor<br>14  Hidden FAT16 &lt;3 61  SpeedStor       ab  Darwin boot     f2  DOS secondary<br>16  Hidden FAT16    63  GNU HURD or Sys af  HFS / HFS+      fb  VMware VMFS<br>17  Hidden HPFS/NTF 64  Novell Netware  b7  BSDI fs         fc  VMware VMKCORE<br>18  AST SmartSleep  65  Novell Netware  b8  BSDI swap       fd  Linux raid auto<br>1b  Hidden W95 FAT3 70  DiskSecure Mult bb  Boot Wizard hid fe  LANstep<br>1c  Hidden W95 FAT3 75  PC/IX           be  Solaris boot    ff  BBT<br>1e  Hidden W95 FAT1 80  Old Minix<br>Hex code (type L to list all codes): 8e<br>Changed type of partition ‘Linux’ to ‘Linux LVM’</p>
<p>Command (m for help): w<br>The partition table has been altered!</p>
<p>Calling ioctl() to re-read partition table.</p>
<p>WARNING: Re-reading the partition table failed with error 16: Device or resource busy.<br>The kernel still uses the old table. The new table will be used at<br>the next reboot or after you run partprobe(8) or kpartx(8)<br>Syncing disks.<br></pre></details></p>
<pre>
   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048     2099199     1048576   83  Linux
/dev/sda2         2099200   146800639    72350720   8e  Linux LVM
/dev/sda3       146800640   419430399   136314880   8e  Linux LVM
</pre>



<p><code>The new table be used at the next reboot or after you run partprobe(8) or kpartx(8)</code></p>
<p><del>[root@localhost ~]# partprobe /dev/sda3</del><br><del>Error: Could not stat device /dev/sda3 - No such file or directory.</del></p>
<h3 id="重读分区表"><a href="#重读分区表" class="headerlink" title="重读分区表"></a>重读分区表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">partprobe</span><br></pre></td></tr></table></figure>

<p>该命令没有输出</p>
<h3 id="创建物理卷"><a href="#创建物理卷" class="headerlink" title="创建物理卷"></a>创建物理卷</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pvcreate /dev/sda3</span><br></pre></td></tr></table></figure>

<details><summary>[root@localhost ~]# pvcreate /dev/sda3</summary>
<pre>Physical volume "/dev/sda3" successfully created.
</pre></details>

<h3 id="添加物理卷-dev-sda3-到卷组-centos"><a href="#添加物理卷-dev-sda3-到卷组-centos" class="headerlink" title="添加物理卷 /dev/sda3 到卷组 centos"></a>添加物理卷 /dev/sda3 到卷组 centos</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vgextend centos /dev/sda3</span><br></pre></td></tr></table></figure>

<pre>[root@localhost ~]# pvcreate /dev/sda3
/etc/lvm/archive/.lvm_localhost.localdomain_25674_920701457: write error failed: No space left on device
</pre>

<p>划重点 <code>No space left on device</code></p>
<p>真的是一滴都不剩了</p>
<details><summary>[root@localhost ~]# pvcreate /dev/sda3</summary>
<pre>Volume group "centos" successfully extended
</pre></details>

<p>此时观察一下 centos 卷组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vgdisplay</span><br></pre></td></tr></table></figure>

<pre>--- Volume group ---
  VG Name               centos
  System ID             
  Format                lvm2
  Metadata Areas        2
  Metadata Sequence No  5
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                3
  Open LV               3
  Max PV                0
  Cur PV                2
  Act PV                2
  VG Size               198.99 GiB
  PE Size               4.00 MiB
  Total PE              50942
  Alloc PE / Size       17662 / 68.99 GiB
  Free  PE / Size       33280 / 130.00 GiB
  VG UUID               BSr9nB-EIMu-xRLk-bdo0-Z2x6-ZC4N-asZ5Gx</pre>

<p><code>Free  PE / Size       33280 / 130.00 GiB</code></p>
<h3 id="将空闲的空间分配给-root-文件系统"><a href="#将空闲的空间分配给-root-文件系统" class="headerlink" title="将空闲的空间分配给 root 文件系统"></a>将空闲的空间分配给 root 文件系统</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lvextend -l +100%FREE /dev/mapper/centos-root</span><br></pre></td></tr></table></figure>

<details><summary>[root@localhost ~]# lvextend -l +100%FREE /dev/mapper/centos-root</summary>
<pre>Size of logical volume centos/root changed from 43.75 GiB (11201 extents) to 173.75 GiB (44481 extents).
Logical volume centos/root successfully resized.</pre></details>

<h3 id="对-root-文件系统执行扩容"><a href="#对-root-文件系统执行扩容" class="headerlink" title="对 root 文件系统执行扩容"></a>对 root 文件系统执行扩容</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xfs_growfs /dev/mapper/centos-root</span><br></pre></td></tr></table></figure>

<details><summary>[root@localhost ~]# xfs_growfs /dev/mapper/centos-root</summary>
<pre>meta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=2867456 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=0 spinodes=0
data     =                       bsize=4096   blocks=11469824, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal               bsize=4096   blocks=5600, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
data blocks changed from 11469824 to 45548544
</pre></details>

<hr>
<p>最后看一眼磁盘使用情况</p>
<pre>
[root@localhost ~]# df -h
Filesystem               Size  Used Avail Use% Mounted on
/dev/mapper/centos-root  174G   44G  131G  26% /
</pre>

<p>OK 下班</p>
]]></content>
      <categories>
        <category>服务器</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>运维</tag>
      </tags>
  </entry>
</search>
